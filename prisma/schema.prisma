// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums para campos con opciones predefinidas
enum Rol {
  admin
  editor
  usuario
}

enum TipoBien {
  facturacion
  transitorio
  regular
}

enum EstadoColos {
  activo
  inactivo
  mantenimiento
}

model AuthUser {
  id                  Int                   @id @default(autoincrement())
  password            String                @db.VarChar(128)
  last_login          DateTime?             @db.Timestamp(6)
  is_processor        Boolean               @default(false)
  username            String                @unique @db.VarChar(150)
  first_name          String?               @db.VarChar(156)
  last_name           String?               @db.VarChar(159)
  email               String?               @unique @db.VarChar(254)
  is_addr             Boolean               @default(false)
  is_active           Boolean               @default(true)
  date_ponse          DateTime?             @db.Timestamp(6)
  palabras_seguridad  String[]              @db.VarChar(50) // Array de PostgreSQL
  rol                 Rol                   @default(usuario)
  coordinaciones      Coordinacion[]        // Relación 1 a muchos
  mensajes            CreeWetPodificacion[] // Relación 1 a muchos
}

model Coordinacion {
  id_coordinacion Int         @id @default(autoincrement())
  codigo          String      @unique @db.VarChar(45)
  nombre          String      @db.VarChar(45)
  descripcion     String?     @db.Text
  user_id         Int
  user            AuthUser    @relation(fields: [user_id], references: [id])
  bienes          Bienes[]
  vigilantes      Vigilantes[]
}

model Bienes {
  id_bienes              Int          @id @default(autoincrement())
  numero_inventario      String       @unique @db.VarChar(100)
  nombre_ben             String       @db.VarChar(100)
  marca                  String?      @db.VarChar(100)
  modelo                 String?      @db.VarChar(100)
  serial                 String?      @unique @db.VarChar(100)
  caracteristica         String?      @db.Text
  codigo_color           String?      @db.VarChar(45)
  color_ubica_trimestria String?      @db.VarChar(100)
  estado_colos           EstadoColos? @default(activo)
  foto1                  String?      @db.VarChar(255)
  foto2                  String?      @db.VarChar(255)
  id_coordinacion        Int?
  tipo_bien              TipoBien     @default(regular)
  coordinacion           Coordinacion? @relation(fields: [id_coordinacion], references: [id_coordinacion])
}

model CreeWetPodificacion {
  id             BigInt   @id @default(autoincrement())
  message        String   @db.Text
  leido          Boolean  @default(false)
  ficha_creador  DateTime @db.Timestamp(6) @default(now())
  autorizado     Boolean  @default(false)
  usuario_id     Int
  usuario        AuthUser @relation(fields: [usuario_id], references: [id])
}

model Vigilantes {
  id_vigilante      Int          @id @default(autoincrement())
  numero_inventario String       @db.VarChar(100)
  nombre_ben        String       @db.VarChar(100)
  destino_ben       String       @db.VarChar(100)
  hora_entrada      DateTime?    @db.Time(6)   // Tipo tiempo PostgreSQL
  hora_salida       DateTime?    @db.Time(6)
  ficha_retorno     DateTime?    @db.Timestamp(6)
  foto1             String?      @db.VarChar(255)
  foto2             String?      @db.VarChar(255)
  id_coordinacion   Int?
  coordinacion      Coordinacion? @relation(fields: [id_coordinacion], references: [id_coordinacion])
}
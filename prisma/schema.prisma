generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bienes {
  id_bienes         Int             @id @default(autoincrement())
  numero_inventario String          @unique @db.VarChar(100)
  nombre_bien       String?         @db.VarChar(100)
  marca             String?         @db.VarChar(100)
  modelo            String?         @db.VarChar(100)
  serial            String?         @db.VarChar(100)
  caracteristicas   String?         @db.VarChar(100)
  estado_bien       String?         @db.VarChar(15)
  foto1             String?         @db.VarChar(100)
  foto2             String?         @db.VarChar(100)
  id_coordinacion   Int?
  nombre_empleado   String?         @db.VarChar(100)
  fecha_ingreso     String?         @db.VarChar(45)
  codigo_color      String?         @db.VarChar(45)
  tipo_bien         String?         @db.VarChar(15)
  coordinaciones    coordinaciones? @relation(fields: [id_coordinacion], references: [id_coordinacion], onDelete: NoAction, onUpdate: NoAction)
}

model coordinaciones {
  id_coordinacion                                                       Int              @id @default(autoincrement())
  nombre_coordinacion                                                   String           @db.VarChar(100)
  number_coordinacion                                                   String           @db.VarChar(100)
  bienes                                                                bienes[]
  notificaciones_notificaciones_id_coordinacion_origenTocoordinaciones  notificaciones[] @relation("notificaciones_destino")
  notificaciones_notificaciones_id_coordinacion_destinoTocoordinaciones notificaciones[] @relation("notificaciones_origen")
  usuarios                                                              usuarios[]
  vigilantes                                                            vigilantes[]
}

model notificaciones {
  id_notificacion         Int             @id @default(autoincrement())
  id_coordinacion_origen  Int?
  id_coordinacion_destino Int?
  tipo_operacion          String          @db.VarChar(20)
  descripcion             String          @db.VarChar(255)
  fecha_creacion          DateTime        @default(now()) @map("fecha_notificacion")
  estado                  String          @db.VarChar(15)
  id_bienes               Int?
  coordinacion_destino    coordinaciones? @relation("notificaciones_destino", fields: [id_coordinacion_destino], references: [id_coordinacion])
  coordinacion_origen     coordinaciones? @relation("notificaciones_origen", fields: [id_coordinacion_origen], references: [id_coordinacion])
}

model usuarios {
  id_usuario        Int             @id @default(autoincrement())
  username          String          @unique @db.VarChar(100)
  contrase_a        String          @map("contrase√±a") @db.VarChar(100)
  palabra_seguridad String?         @db.VarChar(100)
  id_coordinacion   Int?
  coordinaciones    coordinaciones? @relation(fields: [id_coordinacion], references: [id_coordinacion], onDelete: NoAction, onUpdate: NoAction)
}

model vigilantes {
  id_vigilante      Int             @id @default(autoincrement())
  numero_inventario String?         @db.VarChar(100)
  nombre_bien       String?         @db.VarChar(100)
  destino_bien      String?         @db.VarChar(100)
  hora_entrada      String?         @db.VarChar(45)
  hora_salida       String?         @db.VarChar(45)
  fecha_reformo     String?         @db.VarChar(100)
  foto1             String?         @db.VarChar(100)
  foto2             String?         @db.VarChar(100)
  id_coordinacion   Int?
  coordinaciones    coordinaciones? @relation(fields: [id_coordinacion], references: [id_coordinacion], onDelete: NoAction, onUpdate: NoAction)
}
